;; インタプリタが適用順評価(applicative-order)か正規順評価(normal-order)のどちらかを確認.
(define (p) (p))
(define (test x y)
  (if (= x 0) 0 y))

(test 0 2) ; => 0
(test 1 2) ; => 2

;; 次に以下の式を評価する
(test 0 (p))

;; 適用順評価のインタプリタ(Gaucheもこれ)は,
;; まず"0"と"(p)"それぞれ評価しようとする. 0は数値だが(p)の中でさらに(p)が再帰的に呼び出されており, 無限ループとなる.

;; $ ps aux | grep gosh
;; hash            69944 100.0  0.1  2458144   4684 s005  Rs+   3:27PM   0:15.01 /usr/local/bin/gosh
;; CPU 100%. killる


;; 一方, 仮に正規順序評価のインタプリタで動かしたとすれば以下のようになると考えられる
(test 0 (p))
(if (= 0 0) 0 (p)) ;; testの中身
(if true 0 (p))    ;; 問題文より, ifは先に条件式を評価する
0                  ;; 無限ループに陥らず0が帰る
